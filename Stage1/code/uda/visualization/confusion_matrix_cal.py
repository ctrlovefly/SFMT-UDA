import numpy as np

# Define the confusion matrix
# confusion_matrix = np.array([
#     [ 81,   0,   0,   5,   0,   0,   1,  16,   0,   0,   0,   0,   0,  10,   0,   3],
#     [  3,  23,   0,  12,  29,   0,  10,   6,   0,   0,   0,   0,   0,   2,   5,   0],
#     [  0,   9, 119,   0,   0,   1,   3,   0,   0,   0,   0,   0,   0,   0,   0,   0],
#     [ 14,  20,   4, 130,   5,   0,   0,   7,   0,   0,   5,   0,   0,   0,   0,   0],
#     [ 43,   2,   0,   7,  29,   4,   0,  20,   0,   0,   4,   0,   0,   0,   1,   0],
#     [  0,   1,   3,   0,   0,  23,   0,   8,   0,   0,   5,   0,   0,   0,   0,   0],
#     [  0,   5,   0,   0,   0,   0, 139,   6,   0,   0,   0,   0,   0,   1,   0,   1],
#     [  0,   0,   1,   0,   0,  11,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
#     [  0,   2,   0,   0,   1,   0,  63,   0,   9,   0,   0,   0,   0,  19,  14,   0],
#     [  0,   0,   0,   0,   0,   0,   0,   0,   0,  91,   5,   0,   5,   0,   0,   0],
#     [  0,   0,   0,   0,   0,   0,   0,   0,   0,  51,  91,   0,  12,   0,   1,   2],
#     [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,   0,  41,   0,   0,   5],
#     [  0,   0,   0,   0,   0,   0,   1,   0,   0,   1,   4,   0,  42,   0,   0,   0],
#     [  0,   5,   0,   0,   0,   0,   3,   0,   0,   0,  11,   0,   3,  22,  11,   5],
#     [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  16,   0],
#     [  0,   0,   3,   0,   0,   1,   0,   0,   0,   0,   3,   0,  11,   0,   0, 147]
# ])

confusion_matrix = np.array([
    [565, 25, 0, 250, 23, 1, 6, 2, 4, 0, 1, 0, 2, 20, 5, 19],
    [48, 171, 49, 21, 355, 16, 30, 7, 0, 1, 2, 0, 3, 28, 10, 3],
    [46, 520, 438, 3, 69, 118, 11, 10, 9, 2, 1, 2, 6, 26, 6, 3],
    [269, 24, 1, 410, 53, 3, 9, 25, 6, 11, 6, 8, 1, 35, 12, 18],
    [115, 79, 4, 44, 345, 34, 50, 45, 2, 21, 5, 0, 2, 27, 5, 10],
    [19, 48, 80, 7, 76, 203, 7, 27, 3, 2, 8, 1, 21, 17, 2, 1],
    [16, 27, 3, 4, 6, 0, 2113, 18, 20, 0, 4, 2, 24, 39, 7, 6],
    [12, 56, 43, 5, 19, 55, 44, 89, 6, 23, 54, 11, 76, 41, 13, 4],
    [60, 7, 4, 5, 13, 3, 330, 54, 71, 1, 10, 4, 9, 41, 54, 4],
    [9, 7, 9, 1, 7, 0, 11, 19, 1, 1041, 131, 3, 66, 32, 9, 73],
    [3, 10, 7, 5, 14, 4, 23, 27, 1, 112, 336, 17, 159, 35, 20, 28],
    [2, 16, 1, 4, 7, 0, 67, 8, 1, 19, 107, 38, 54, 39, 138, 13],
    [4, 4, 3, 0, 6, 3, 19, 8, 1, 9, 26, 12, 382, 10, 11, 19],
    [12, 20, 3, 33, 2, 6, 323, 10, 16, 13, 23, 27, 31, 190, 84, 16],
    [2, 9, 6, 11, 2, 0, 57, 7, 1, 15, 81, 37, 82, 40, 521, 30],
    [0, 4, 6, 3, 2, 3, 86, 23, 1, 16, 45, 17, 120, 13, 31, 1336]
])

# Calculate accuracy
correct_predictions = np.trace(confusion_matrix)  # Sum of diagonal elements
total_predictions = np.sum(confusion_matrix)     # Sum of all elements
accuracy = correct_predictions / total_predictions

print(f"Accuracy: {accuracy:.4f}")
